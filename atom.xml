<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>reezon</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://reezon.github.io/"/>
  <updated>2018-04-04T06:13:38.254Z</updated>
  <id>http://reezon.github.io/</id>
  
  <author>
    <name>reezon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mac下反编译apk</title>
    <link href="http://reezon.github.io/2018/04/04/mac%E4%B8%8B%E5%8F%8D%E7%BC%96%E8%AF%91apk/"/>
    <id>http://reezon.github.io/2018/04/04/mac下反编译apk/</id>
    <published>2018-04-04T06:09:29.000Z</published>
    <updated>2018-04-04T06:13:38.254Z</updated>
    
    <content type="html"><![CDATA[<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul><li>apktool：用于反编译apk文件</li><li>dex2jar：用于将反编译出的class.dex转换成classes-dex2jar.jar</li><li>jd-gui：用于阅读classes-dex2jar.jar源码</li><li>signAPK：给重新打包后的apk签名</li></ul><h3 id="安装apktool"><a href="#安装apktool" class="headerlink" title="安装apktool"></a>安装apktool</h3><p>安装地址：<br><a href="https://ibotpeaches.github.io/Apktool/install/" target="_blank" rel="noopener">https://ibotpeaches.github.io/Apktool/install/</a></p><p>根据教程将apktool安装好即可。</p><p>注意：需要先安装java sdk。<br>下载地址：<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk9-downloads-3848520.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javase/downloads/jdk9-downloads-3848520.html</a></p><h3 id="安装dex2jar"><a href="#安装dex2jar" class="headerlink" title="安装dex2jar"></a>安装dex2jar</h3><p>下载并解压dex2jar-2.0<br>为dex2jar-2.0添加权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ chmod -R 777 dex2jar-2.0</span><br><span class="line">$ chmod +x d2j_invoke.sh</span><br></pre></td></tr></table></figure></p><h3 id="安装jd-gui"><a href="#安装jd-gui" class="headerlink" title="安装jd-gui"></a>安装jd-gui</h3><p>使用brew安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew cask install jd-gui</span><br></pre></td></tr></table></figure></p><p>注意：只能运行在jdk 1.8版本下。否则按照此文档对jdk版本进行更改：<a href="http://blog.csdn.net/YoungStunner/article/details/78699864" target="_blank" rel="noopener">http://blog.csdn.net/YoungStunner/article/details/78699864</a></p><h2 id="反编译流程"><a href="#反编译流程" class="headerlink" title="反编译流程"></a>反编译流程</h2><h3 id="使用apktool反编译apk包"><a href="#使用apktool反编译apk包" class="headerlink" title="使用apktool反编译apk包"></a>使用apktool反编译apk包</h3><p>运行如下命令来反编译：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apktool d xxx.apk</span><br></pre></td></tr></table></figure></p><p>用压缩软件unzip achiever打开StabilityTest.apk，然后解压出位于根目录下的classes.dex</p><h3 id="使用dex2jar将classes-dex转换为jar包"><a href="#使用dex2jar将classes-dex转换为jar包" class="headerlink" title="使用dex2jar将classes.dex转换为jar包"></a>使用dex2jar将classes.dex转换为jar包</h3><p>运行如下命令来转换：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sh d2j-dex2jar.sh classes.dex</span><br></pre></td></tr></table></figure></p><h3 id="使用jd-gui打开classes-dex2jar-jar"><a href="#使用jd-gui打开classes-dex2jar-jar" class="headerlink" title="使用jd-gui打开classes-dex2jar.jar"></a>使用jd-gui打开classes-dex2jar.jar</h3><p>如果觉得jd-gui查看代码不方便，还可以通过File-&gt;Save All Sources导出一个classes-dex2jar.src.zip，将classes-dex2jar.src.zip解压以后，导入到Sublime阅读代码。</p><h3 id="修改完smali源码后，使用apktool重新打包生成apk"><a href="#修改完smali源码后，使用apktool重新打包生成apk" class="headerlink" title="修改完smali源码后，使用apktool重新打包生成apk"></a>修改完smali源码后，使用apktool重新打包生成apk</h3><p>运行如下命令来打包：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apktool b xxx.apk</span><br></pre></td></tr></table></figure></p><h3 id="使用sign-jar进行签名"><a href="#使用sign-jar进行签名" class="headerlink" title="使用sign.jar进行签名"></a>使用sign.jar进行签名</h3><p>运行如下命令来签名：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ java -jar sign.jar xxxx.apk</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;工具&quot;&gt;&lt;a href=&quot;#工具&quot; class=&quot;headerlink&quot; title=&quot;工具&quot;&gt;&lt;/a&gt;工具&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;apktool：用于反编译apk文件&lt;/li&gt;
&lt;li&gt;dex2jar：用于将反编译出的class.dex转换成classes-
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Docker实战</title>
    <link href="http://reezon.github.io/2018/04/03/Docker%E5%AE%9E%E6%88%98/"/>
    <id>http://reezon.github.io/2018/04/03/Docker实战/</id>
    <published>2018-04-03T14:21:14.000Z</published>
    <updated>2018-04-03T14:36:16.950Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>为用户实现独立域名绑定个人网站，但是一台阿里云ECS最多只允许5个域名进行备案，因此需要部署n台服务器，以满足5n个用户的个人网站。</p><p>这n台服务器的server代码和nginx配置都是相同的，最适合使用Docker技术来实现。</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="1-在Ubuntu中安装Docker"><a href="#1-在Ubuntu中安装Docker" class="headerlink" title="1.在Ubuntu中安装Docker"></a>1.在Ubuntu中安装Docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get update &amp;&amp; apt-get install docker.io</span><br></pre></td></tr></table></figure><h3 id="2-使用pull命令从官方镜像库中拽取一个-Ubuntu-14-04的image"><a href="#2-使用pull命令从官方镜像库中拽取一个-Ubuntu-14-04的image" class="headerlink" title="2.使用pull命令从官方镜像库中拽取一个 Ubuntu 14.04的image"></a>2.使用pull命令从官方镜像库中拽取一个 Ubuntu 14.04的image</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull ubuntu:14.04</span><br></pre></td></tr></table></figure><h3 id="3-如果拽取速度太慢，可以安装阿里云的Docker加速器"><a href="#3-如果拽取速度太慢，可以安装阿里云的Docker加速器" class="headerlink" title="3.如果拽取速度太慢，可以安装阿里云的Docker加速器"></a>3.如果拽取速度太慢，可以安装阿里云的Docker加速器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir -p /etc/docker</span><br><span class="line">tee /etc/docker/daemon.json &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://03gzvkg6.mirror.aliyuncs.com"</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p>阿里云的镜像地址是：dev.aliyun.com/search.html</p><h3 id="4-运行image"><a href="#4-运行image" class="headerlink" title="4.运行image"></a>4.运行image</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -it --rm ubuntu:14.04 bash</span><br></pre></td></tr></table></figure><p>其中：–rm表示退出后就销毁该container</p><h3 id="5-编写自己的Dockerfile"><a href="#5-编写自己的Dockerfile" class="headerlink" title="5.编写自己的Dockerfile"></a>5.编写自己的Dockerfile</h3><p>新建一个目录，在目录下运行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ touch Dockerfile</span><br></pre></td></tr></table></figure></p><p>然后编辑这个Dockerfile文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">FROM ubuntu:16.04</span><br><span class="line">MAINTAINER picbling &lt;it@picbling.com&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装环境</span></span><br><span class="line">RUN apt-get update &amp;&amp; apt-get install -y \</span><br><span class="line">    git \</span><br><span class="line">    nginx \</span><br><span class="line">    htop \</span><br><span class="line">    vim \</span><br><span class="line">    curl \</span><br><span class="line">    &amp;&amp; rm -rf /var/lib/apt/lists/*</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装node</span></span><br><span class="line">RUN curl -sL https://deb.nodesource.com/setup_6.x | bash - \</span><br><span class="line">    &amp;&amp; apt-get install -y nodejs \</span><br><span class="line">    &amp;&amp; rm -rf /var/lib/apt/lists/*</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉取server项目代码</span></span><br><span class="line">RUN <span class="built_in">cd</span> /root \</span><br><span class="line">    &amp;&amp; git <span class="built_in">clone</span> https://xxx/server.git \</span><br><span class="line">    &amp;&amp; <span class="built_in">cd</span> server \</span><br><span class="line">    &amp;&amp; npm i \</span><br><span class="line">    &amp;&amp; npm run build</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉取nginx配置</span></span><br><span class="line">RUN <span class="built_in">cd</span> /root &amp;&amp; \</span><br><span class="line">    git <span class="built_in">clone</span> https://xxx/nginx.git &amp;&amp; \</span><br><span class="line">    <span class="built_in">cd</span> nginx &amp;&amp; \</span><br><span class="line">    cp nginx.conf /etc/nginx/  &amp;&amp; \</span><br><span class="line">    cp -rf sites-enabled /etc/nginx/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动pm2</span></span><br><span class="line">RUN npm i -g pm2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行server</span></span><br><span class="line">CMD [<span class="string">"pm2"</span>, <span class="string">"start"</span>, <span class="string">"NODE_ENV=production /root/server/server.js"</span>]</span><br><span class="line"></span><br><span class="line">EXPOSE 22</span><br><span class="line">EXPOSE 80</span><br></pre></td></tr></table></figure></p><h3 id="6-在Dockerfile目录下运行命令来编译"><a href="#6-在Dockerfile目录下运行命令来编译" class="headerlink" title="6.在Dockerfile目录下运行命令来编译"></a>6.在Dockerfile目录下运行命令来编译</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker build -t picbling/homepage-server-ubuntu-16.04 .</span><br></pre></td></tr></table></figure><h3 id="7-将image上传到云端"><a href="#7-将image上传到云端" class="headerlink" title="7.将image上传到云端"></a>7.将image上传到云端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker login</span><br><span class="line">$ docker push picbling/homepage-server-ubuntu-16.04</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h2&gt;&lt;p&gt;为用户实现独立域名绑定个人网站，但是一台阿里云ECS最多只允许5个域名进行备案，因此需要部署n台服务器，以满足5n个用户的个人网站。&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="Docker" scheme="http://reezon.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>在macOS上使用Hexo+github构建自己的博客</title>
    <link href="http://reezon.github.io/2018/03/30/%E5%9C%A8macOS%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo-github%E6%9E%84%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <id>http://reezon.github.io/2018/03/30/在macOS上使用Hexo-github构建自己的博客/</id>
    <published>2018-03-30T10:29:16.000Z</published>
    <updated>2018-03-30T11:02:31.440Z</updated>
    
    <content type="html"><![CDATA[<h3 id="在macOS上安装Hexo"><a href="#在macOS上安装Hexo" class="headerlink" title="在macOS上安装Hexo"></a>在macOS上安装Hexo</h3><p>首先需要安装<a href="https://nodejs.org/en/" target="_blank" rel="noopener">nodejs</a>环境</p><p>然后运行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm i -g hexo</span><br></pre></td></tr></table></figure></p><h3 id="初始化blog项目"><a href="#初始化blog项目" class="headerlink" title="初始化blog项目"></a>初始化blog项目</h3><p>新建一个目录，然后进入目录，运行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure></p><h3 id="在github上创建博客项目"><a href="#在github上创建博客项目" class="headerlink" title="在github上创建博客项目"></a>在github上创建博客项目</h3><p>在github上创建一个如下名字的项目</p><blockquote><p>xxx.gihub.io</p></blockquote><h3 id="配置blog项目的发布方式"><a href="#配置blog项目的发布方式" class="headerlink" title="配置blog项目的发布方式"></a>配置blog项目的发布方式</h3><p>安装git发布插件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><p>打开文件 <strong>_config.xml</strong> , 编辑如下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/YourgithubName/YourgithubName.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h3 id="本地运行"><a href="#本地运行" class="headerlink" title="本地运行"></a>本地运行</h3><p>运行如下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo generate</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></p><h3 id="部署到github"><a href="#部署到github" class="headerlink" title="部署到github"></a>部署到github</h3><p>运行如下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></p><p>就能自动发布到xxx.github.io了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;在macOS上安装Hexo&quot;&gt;&lt;a href=&quot;#在macOS上安装Hexo&quot; class=&quot;headerlink&quot; title=&quot;在macOS上安装Hexo&quot;&gt;&lt;/a&gt;在macOS上安装Hexo&lt;/h3&gt;&lt;p&gt;首先需要安装&lt;a href=&quot;https://nod
      
    
    </summary>
    
    
      <category term="hexo github" scheme="http://reezon.github.io/tags/hexo-github/"/>
    
  </entry>
  
</feed>
